{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red73\green17\blue135;\red245\green247\blue249;\red29\green38\blue42;
\red151\green0\blue126;\red20\green0\blue196;}
{\*\expandedcolortbl;;\cssrgb\c36078\c14902\c60000;\cssrgb\c96863\c97647\c98039;\cssrgb\c14902\c19608\c21961;
\cssrgb\c66667\c5098\c56863;\cssrgb\c10980\c0\c81176;}
\margl1440\margr1440\vieww25100\viewh13280\viewkind0
\deftab720
\pard\pardeftab720\sl416\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This\cf4 \strokec4  \cf5 \strokec5 is\cf4 \strokec4  an amazing solution.\cf2 \strokec2 Learnt\cf4 \strokec4  a lot.\cf2 \strokec2 Let\cf4 \strokec4  me \cf5 \strokec5 try\cf4 \strokec4  to explain this to those who didn't \cf5 \strokec5 get\cf4 \strokec4  the logic.\
\
 \cf2 \strokec2 Number\cf4 \strokec4  of subsets \cf5 \strokec5 for\cf4 \strokec4  \{\cf6 \strokec6 1\cf4 \strokec4  , \cf6 \strokec6 2\cf4 \strokec4  , \cf6 \strokec6 3\cf4 \strokec4  \} = \cf6 \strokec6 2\cf4 \strokec4 ^\cf6 \strokec6 3\cf4 \strokec4  .\
 why ? \
\cf5 \strokec5 case\cf4 \strokec4     possible outcomes \cf5 \strokec5 for\cf4 \strokec4  the \cf5 \strokec5 set\cf4 \strokec4  of subsets\
  \cf6 \strokec6 1\cf4 \strokec4    ->          \cf2 \strokec2 Take\cf4 \strokec4  or dont take = \cf6 \strokec6 2\cf4 \strokec4  \
  \cf6 \strokec6 2\cf4 \strokec4    ->          \cf2 \strokec2 Take\cf4 \strokec4  or dont take = \cf6 \strokec6 2\cf4 \strokec4   \
  \cf6 \strokec6 3\cf4 \strokec4    ->          \cf2 \strokec2 Take\cf4 \strokec4  or dont take = \cf6 \strokec6 2\cf4 \strokec4  \
\
therefore , total = \cf6 \strokec6 2\cf4 \strokec4 *\cf6 \strokec6 2\cf4 \strokec4 *\cf6 \strokec6 2\cf4 \strokec4  = \cf6 \strokec6 2\cf4 \strokec4 ^\cf6 \strokec6 3\cf4 \strokec4  = \{ \{ \} , \{\cf6 \strokec6 1\cf4 \strokec4 \} , \{\cf6 \strokec6 2\cf4 \strokec4 \} , \{\cf6 \strokec6 3\cf4 \strokec4 \} , \{\cf6 \strokec6 1\cf4 \strokec4 ,\cf6 \strokec6 2\cf4 \strokec4 \} , \{\cf6 \strokec6 1\cf4 \strokec4 ,\cf6 \strokec6 3\cf4 \strokec4 \} , \{\cf6 \strokec6 2\cf4 \strokec4 ,\cf6 \strokec6 3\cf4 \strokec4 \} , \{\cf6 \strokec6 1\cf4 \strokec4 ,\cf6 \strokec6 2\cf4 \strokec4 ,\cf6 \strokec6 3\cf4 \strokec4 \} \}\
\
\cf2 \strokec2 Lets\cf4 \strokec4  assign bits to each outcome  -> \cf2 \strokec2 First\cf4 \strokec4  bit to \cf6 \strokec6 1\cf4 \strokec4  , \cf2 \strokec2 Second\cf4 \strokec4  bit to \cf6 \strokec6 2\cf4 \strokec4  and third bit to \cf6 \strokec6 3\cf4 \strokec4 \
\cf2 \strokec2 Take\cf4 \strokec4  = \cf6 \strokec6 1\cf4 \strokec4 \
\cf2 \strokec2 Dont\cf4 \strokec4  take = \cf6 \strokec6 0\cf4 \strokec4 \
 \
\cf6 \strokec6 0\cf4 \strokec4 ) \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4   -> \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 3\cf4 \strokec4  , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 2\cf4 \strokec4  , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 1\cf4 \strokec4  = \{ \} \
\cf6 \strokec6 1\cf4 \strokec4 ) \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4   -> \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 3\cf4 \strokec4  , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 2\cf4 \strokec4  ,   take \cf6 \strokec6 1\cf4 \strokec4        =  \{\cf6 \strokec6 1\cf4 \strokec4  \} \
\cf6 \strokec6 2\cf4 \strokec4 ) \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4   -> \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 3\cf4 \strokec4  ,    take \cf6 \strokec6 2\cf4 \strokec4        , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 1\cf4 \strokec4  = \{ \cf6 \strokec6 2\cf4 \strokec4  \} \
\cf6 \strokec6 3\cf4 \strokec4 ) \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4   -> \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 3\cf4 \strokec4  ,    take \cf6 \strokec6 2\cf4 \strokec4        ,      take \cf6 \strokec6 1\cf4 \strokec4     = \{ \cf6 \strokec6 1\cf4 \strokec4  , \cf6 \strokec6 2\cf4 \strokec4  \} \
\cf6 \strokec6 4\cf4 \strokec4 ) \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4   ->    take \cf6 \strokec6 3\cf4 \strokec4       , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 2\cf4 \strokec4   , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 1\cf4 \strokec4  = \{ \cf6 \strokec6 3\cf4 \strokec4  \} \
\cf6 \strokec6 5\cf4 \strokec4 ) \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4   ->    take \cf6 \strokec6 3\cf4 \strokec4       , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 2\cf4 \strokec4   ,     take \cf6 \strokec6 1\cf4 \strokec4      = \{ \cf6 \strokec6 1\cf4 \strokec4  , \cf6 \strokec6 3\cf4 \strokec4  \} \
\cf6 \strokec6 6\cf4 \strokec4 ) \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4   ->    take \cf6 \strokec6 3\cf4 \strokec4       ,    take \cf6 \strokec6 2\cf4 \strokec4        , \cf2 \strokec2 Dont\cf4 \strokec4  take \cf6 \strokec6 1\cf4 \strokec4  = \{ \cf6 \strokec6 2\cf4 \strokec4  , \cf6 \strokec6 3\cf4 \strokec4  \} \
\cf6 \strokec6 7\cf4 \strokec4 ) \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4   ->    take \cf6 \strokec6 3\cf4 \strokec4      ,      take \cf6 \strokec6 2\cf4 \strokec4      ,      take \cf6 \strokec6 1\cf4 \strokec4      = \{ \cf6 \strokec6 1\cf4 \strokec4  , \cf6 \strokec6 2\cf4 \strokec4  , \cf6 \strokec6 3\cf4 \strokec4  \} \
\
\cf2 \strokec2 In\cf4 \strokec4  the above logic ,\cf2 \strokec2 Insert\cf4 \strokec4  \cf2 \strokec2 S\cf4 \strokec4 [i] only \cf5 \strokec5 if\cf4 \strokec4  (j>>i)&\cf6 \strokec6 1\cf4 \strokec4  ==\cf5 \strokec5 true\cf4 \strokec4    \{ j \cf2 \strokec2 E\cf4 \strokec4  \{ \cf6 \strokec6 0\cf4 \strokec4 ,\cf6 \strokec6 1\cf4 \strokec4 ,\cf6 \strokec6 2\cf4 \strokec4 ,\cf6 \strokec6 3\cf4 \strokec4 ,\cf6 \strokec6 4\cf4 \strokec4 ,\cf6 \strokec6 5\cf4 \strokec4 ,\cf6 \strokec6 6\cf4 \strokec4 ,\cf6 \strokec6 7\cf4 \strokec4  \}   i = ith element \cf5 \strokec5 in\cf4 \strokec4  the input array \}\
\
element \cf6 \strokec6 1\cf4 \strokec4  \cf5 \strokec5 is\cf4 \strokec4  inserted only into those places \cf5 \strokec5 where\cf4 \strokec4  1st bit of j \cf5 \strokec5 is\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \
   \cf5 \strokec5 if\cf4 \strokec4 ( j >> \cf6 \strokec6 0\cf4 \strokec4  &\cf6 \strokec6 1\cf4 \strokec4  )  ==> \cf5 \strokec5 for\cf4 \strokec4  above above eg. this \cf5 \strokec5 is\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4  \cf5 \strokec5 for\cf4 \strokec4  sl.no.( j )= \cf6 \strokec6 1\cf4 \strokec4  , \cf6 \strokec6 3\cf4 \strokec4  , \cf6 \strokec6 5\cf4 \strokec4  , \cf6 \strokec6 7\cf4 \strokec4  \
\
element \cf6 \strokec6 2\cf4 \strokec4  \cf5 \strokec5 is\cf4 \strokec4  inserted only into those places \cf5 \strokec5 where\cf4 \strokec4  2nd bit of j \cf5 \strokec5 is\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \
   \cf5 \strokec5 if\cf4 \strokec4 ( j >> \cf6 \strokec6 1\cf4 \strokec4  &\cf6 \strokec6 1\cf4 \strokec4  )  == \cf5 \strokec5 for\cf4 \strokec4  above above eg. this \cf5 \strokec5 is\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4  \cf5 \strokec5 for\cf4 \strokec4  sl.no.( j ) = \cf6 \strokec6 2\cf4 \strokec4  , \cf6 \strokec6 3\cf4 \strokec4  , \cf6 \strokec6 6\cf4 \strokec4  , \cf6 \strokec6 7\cf4 \strokec4 \
\
element \cf6 \strokec6 3\cf4 \strokec4  \cf5 \strokec5 is\cf4 \strokec4  inserted only into those places \cf5 \strokec5 where\cf4 \strokec4  3rd bit of j \cf5 \strokec5 is\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \
   \cf5 \strokec5 if\cf4 \strokec4 ( j >> \cf6 \strokec6 2\cf4 \strokec4  & \cf6 \strokec6 1\cf4 \strokec4  )  == \cf5 \strokec5 for\cf4 \strokec4  above above eg. this \cf5 \strokec5 is\cf4 \strokec4  \cf5 \strokec5 true\cf4 \strokec4  \cf5 \strokec5 for\cf4 \strokec4  sl.no.( j ) = \cf6 \strokec6 4\cf4 \strokec4  , \cf6 \strokec6 5\cf4 \strokec4  , \cf6 \strokec6 6\cf4 \strokec4  , \cf6 \strokec6 7\cf4 \strokec4  \
\
\cf2 \strokec2 Time\cf4 \strokec4  complexity : \cf2 \strokec2 O\cf4 \strokec4 (n*\cf6 \strokec6 2\cf4 \strokec4 ^n) , \cf5 \strokec5 for\cf4 \strokec4  every input element loop traverses the whole solution \cf5 \strokec5 set\cf4 \strokec4  length i.e. \cf6 \strokec6 2\cf4 \strokec4 ^n\
}