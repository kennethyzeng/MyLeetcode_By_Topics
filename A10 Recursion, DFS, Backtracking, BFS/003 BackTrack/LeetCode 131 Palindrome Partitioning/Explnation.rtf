{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red78\green106\blue120;\red255\green255\blue255;\red51\green51\blue51;
}
{\*\expandedcolortbl;;\cssrgb\c37647\c49020\c54510;\cssrgb\c100000\c100000\c100000;\cssrgb\c25882\c25882\c25882;
}
\margl1440\margr1440\vieww25100\viewh13280\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
https://www.youtube.com/watch?v=WBgsABoClE0    (better)\
\
https://www.youtube.com/watch?v=YN0mGjMX8Bo\
\
https://www.youtube.com/watch?v=dl1gtKWXKEs\
\
\
https://www.youtube.com/watch?v=UFdSC_ml4TQ  (python)\
\
\
\pard\pardeftab720\sa280\partightenfactor0
\cf4 if the input is "aab", check if [0,0] "a" is palindrome. then check [0,1] "aa", then [0,2] "aab".\cf4 \cb1 \uc0\u8232 \cf4 \cb3 While checking [0,0], the rest of string is "ab", use ab as input to make a recursive call.\cf4 \cb1 \uc0\u8232 \cf4 \cb3 if the input is "aab", check if [0,0] "a" is palindrome. then check [0,1] "aa", then [0,2] "aab". While checking [0,0], the rest of string is "ab", use ab as input to make a recursive call. ![enter image description here][1]\
\
in this example, in the loop of i=l+1, a recursive call will be made with input = "ab".\cf4 \cb1 \uc0\u8232 \cf4 \cb3 Every time a recursive call is made, the position of l move right.\
\
How to define a correct answer?\cf4 \cb1 \uc0\u8232 \cf4 \cb3 Think about DFS, if the current string to be checked (Palindrome) contains the last position, in this case "c", this path is a correct answer, otherwise, it's a false answer.\
\
![enter image description here][2]\
\
line 13: is the boundary to check if the current string contains the last element.\cf4 \cb1 \uc0\u8232 \cf4 \cb3 l>=s.length()\
}