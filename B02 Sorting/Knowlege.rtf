{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red29\green38\blue42;\red245\green247\blue249;
\red20\green0\blue196;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c14902\c19608\c21961;\cssrgb\c96863\c97647\c98039;
\cssrgb\c10980\c0\c81176;}
\margl1440\margr1440\vieww25100\viewh13280\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Two Dimension array sorting\
1. Descent order\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2   nt[][] twoDim = \{ \{1, 2\}, \{3, 7\}, \{8, 9\}, \{4, 2\}, \{5, 3\} \};\
For Jave 8\
  Arrays.sort(twoDim, Comparator.comparingInt(a -> a[0]).reversed());\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 For java 7\
\pard\pardeftab720\sl416\partightenfactor0

\f2\fs26 \cf3 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Arrays.sort(intervals, (i1, i2) -> Integer.compare(i2[\cf5 \strokec5 0\cf3 \strokec3 ], i1[\cf5 \strokec5 0\cf3 \strokec3 ]));\
\
\pard\pardeftab720\sl340\partightenfactor0

\f1 \cf2 \cb1 \strokec2 Arrays.sort(twoDim, (int[] o1, int[] o2) -> o2[0] - o1[0]);\
\pard\pardeftab720\sl416\partightenfactor0

\f2 \cf3 \cb4 \strokec3 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
2. Ascending order\
\
\pard\pardeftab720\sl416\partightenfactor0

\f2\fs26 \cf3 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Arrays.sort(intervals, (i1, i2) -> Integer.compare(i1[\cf5 \strokec5 0\cf3 \strokec3 ], i2[\cf5 \strokec5 0\cf3 \strokec3 ]));\
\pard\pardeftab720\sl340\partightenfactor0

\f1 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Arrays.sort(twoDim, (int[] o1, int[] o2) -> o1[0] - o2[0]);}